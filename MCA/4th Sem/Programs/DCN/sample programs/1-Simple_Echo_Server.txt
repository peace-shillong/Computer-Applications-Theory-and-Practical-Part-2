//Simple Echo Server-Client Program

//This is a Server program

#include "unp.h"

void str_server(int sockfd)
{
	int n;
	char str[100];
	for (;;)
	{
		if ((n=read(sockfd, str, 100)) == 0 )
			return;		//connection closed by other end
		write(sockfd, str, n);
	}
}

int main(int argc, char **argv)
{
	int listenfd, connfd;
	pid_t childpid;
	socklen_t clilen;
	struct sockaddr_in cliaddr, servaddr;

	listenfd = socket(AF_INET, SOCK_STREAM, 0);

	bzero(&servaddr, sizeof(servaddr));

	servaddr.sin_family      = AF_INET;			
	servaddr.sin_addr.s_addr = htonl(INADDR_ANY);	//any interface
	servaddr.sin_port        = htons(12345); 		//Port nos same for client & server

	bind(listenfd, (structr sockaddr *)&servaddr, sizeof(servaddr));

	listen(listenfd, LISTENQ);

	for ( ; ; ) 
	{
		clilen = sizeof(cliaddr);
		connfd = accept(listenfd, (struct sockaddr *) &cliaddr, &clilen);

		if ( (childpid = fork()) == 0) 
		{	/* child process */
			close(listenfd);	/* close listening socket */
			str_server(connfd);	/* process the request */
			exit(0);
		}
		close(connfd);			/* parent closes connected socket */
	}
}



